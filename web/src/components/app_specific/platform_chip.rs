use dioxus::prelude::*;
use dioxus_free_icons::{icons::fa_brands_icons::FaYoutube, IconShape};
use schema::Platform;

use crate::components::general::Chip;

#[inline_props]
pub fn PlatformChip(cx: Scope, platform: Platform) -> Element {
    let (color, icon, size): (_, &dyn IconShape, _) = match platform {
        Platform::DisneyPlus => ((29, 31, 255), &DisneyPlusIcon, "1.3em"),
        Platform::Netflix => ((229, 9, 20), &NetflixIcon, "1em"),
        Platform::Jellyfin => ((156, 93, 192), &JellyfinIcon, "1em"),
        Platform::PrimeVideo => ((0, 168, 225), &PrimeVideoIcon, "1.3em"),
        Platform::YouTube => ((255, 0, 0), &FaYoutube, "1.3em"),
    };
    render! { Chip { label: "{platform}", color: color, icon_left: icon, icon_size: size } }
}

#[derive(Clone, Copy, Debug)]
struct DisneyPlusIcon;
impl IconShape for DisneyPlusIcon {
    fn view_box(&self) -> String {
        String::from("0 0 48 48")
    }

    fn xmlns(&self) -> String {
        String::from("http://www.w3.org/2000/svg")
    }

    fn child_elements(&self) -> LazyNodes {
        rsx! {
            path {
                d: "M35.161,38.712	c-4.975,1.504-9.67,0.807-12.228,0.139c-0.07,1.03-0.182,1.461-0.351,1.628c-0.197,0.223-1.827,1.141-2.727-0.167	c-0.394-0.626-0.591-1.754-0.702-2.784c-5.762-2.589-8.433-6.403-8.517-6.543c-0.141-0.139-1.447-1.489-0.141-3.16	c1.223-1.504,5.27-3.021,8.897-3.619c0.141-3.063,0.478-5.428,0.914-6.473c0.52-1.253,1.187-0.139,1.771,0.696	c0.478,0.626,0.773,3.313,0.801,5.457c2.361-0.111,3.795,0.062,6.423,0.557c3.457,0.585,5.762,2.338,5.58,4.315	c-0.169,1.949-1.967,2.756-2.67,2.812c-0.703,0.056-1.827-0.459-1.827-0.459c-0.787-0.362-0.07-0.696,0.844-1.086	c1.012-0.487,0.787-0.974,0.787-0.974c-0.366-1.114-4.85-1.857-9.305-1.857c0,2.436,0.098,6.473,0.169,8.825	c3.12,0.585,5.453,0.459,5.453,0.459s11.384-0.32,11.708-7.517c0.357-7.205-11.384-14.108-20.029-16.281	c-8.63-2.241-13.521-0.654-13.937-0.446c-0.464,0.223-0.042,0.306-0.042,0.306s0.464,0.069,1.312,0.348s0.169,0.696,0.169,0.696	c-1.475,0.495-3.12,0.209-3.437-0.459c-0.323-0.654,0.211-1.253,0.844-2.129c0.591-0.905,1.265-0.877,1.265-0.877	c10.674-3.691,23.718,2.922,23.718,2.922c12.199,6.097,14.281,13.266,14.062,16.05c-0.197,2.742-1.265,7.378-8.785,9.633 M11.689,28.759c-1.209,0.557-0.366,1.448-0.366,1.448c2.277,2.414,5.06,3.926,7.731,4.871c0.309-4.176,0.281-5.665,0.281-7.768	C15.203,27.589,12.814,28.257,11.689,28.759"
            }
        }
    }
}

#[derive(Clone, Copy, Debug)]
struct NetflixIcon;
impl IconShape for NetflixIcon {
    fn view_box(&self) -> String {
        String::from("0 0 24 24")
    }

    fn xmlns(&self) -> String {
        String::from("http://www.w3.org/2000/svg")
    }

    fn child_elements(&self) -> LazyNodes {
        rsx! {
            path { d: "M5.398 0v.006c3.028 8.556 5.37 15.175 8.348 23.596 2.344.058 4.85.398 4.854.398-2.8-7.924-5.923-16.747-8.487-24zm8.489 0v9.63L18.6 22.951c-.043-7.86-.004-15.913.002-22.95zM5.398 1.05V24c1.873-.225 2.81-.312 4.715-.398v-9.22z" }
        }
    }
}

#[derive(Clone, Copy, Debug)]
struct JellyfinIcon;
impl IconShape for JellyfinIcon {
    fn view_box(&self) -> String {
        String::from("0 0 24 24")
    }

    fn xmlns(&self) -> String {
        String::from("http://www.w3.org/2000/svg")
    }

    fn child_elements(&self) -> LazyNodes {
        rsx! {
            path { d: "M12 .002C8.826.002-1.398 18.537.16 21.666c1.56 3.129 22.14 3.094 23.682 0C25.384 18.573 15.177 0 12 0zm7.76 18.949c-1.008 2.028-14.493 2.05-15.514 0C3.224 16.9 9.92 4.755 12.003 4.755c2.081 0 8.77 12.166 7.759 14.196zM12 9.198c-1.054 0-4.446 6.15-3.93 7.189.518 1.04 7.348 1.027 7.86 0 .511-1.027-2.874-7.19-3.93-7.19z" }
        }
    }
}

#[derive(Clone, Copy, Debug)]
struct PrimeVideoIcon;
impl IconShape for PrimeVideoIcon {
    fn view_box(&self) -> String {
        String::from("0 0 24 24")
    }

    fn xmlns(&self) -> String {
        String::from("http://www.w3.org/2000/svg")
    }

    fn child_elements(&self) -> LazyNodes {
        rsx! {
            path {
                d: "M22.787 15.292c-.336-.43-2.222-.204-3.069-.103-.257.031-.296-.193-.065-.356 1.504-1.056 3.968-.75 4.255-.397.288.357-.076 2.827-1.485 4.007-.217.18-.423.084-.327-.155.317-.792 1.027-2.566.69-2.996m-1.093 1.248c-2.627 1.94-6.437 2.97-9.717 2.97-4.597 0-8.737-1.7-11.87-4.528-.246-.222-.026-.525.27-.353 3.38 1.967 7.559 3.151 11.876 3.151a23.63 23.63 0 0 0 9.06-1.854c.444-.188.816.293.381.614m.482-5.038c-.761 0-1.346-.209-1.755-.626-.409-.418-.613-1.017-.613-1.797 0-.799.209-1.425.627-1.88.418-.454.998-.682 1.741-.682.572 0 1.019.138 1.341.415.323.276.484.645.484 1.105 0 .461-.174.81-.52 1.046-.348.237-.86.355-1.535.355-.35 0-.654-.034-.912-.101.037.411.161.706.373.884.212.178.533.268.963.268.172 0 .34-.011.502-.033a6.208 6.208 0 0 0 .733-.157.304.304 0 0 1 .046-.004c.104 0 .156.07.156.212v.424c0 .098-.013.167-.04.207a.341.341 0 0 1-.162.106 3.954 3.954 0 0 1-1.429.258m-.304-2.893c.314 0 .541-.048.682-.143.142-.095.212-.241.212-.438 0-.387-.23-.58-.69-.58-.59 0-.931.362-1.024 1.087.246.05.52.074.82.074m-9.84 2.755c-.08 0-.139-.018-.176-.055-.036-.037-.055-.096-.055-.175V6.886c0-.086.019-.146.055-.18.037-.034.096-.05.176-.05h.663c.141 0 .227.067.258.202l.074.249c.325-.215.619-.367.88-.456.26-.09.53-.134.806-.134.553 0 .943.197 1.17.59a3.77 3.77 0 0 1 .885-.452c.276-.092.562-.138.857-.138.43 0 .763.12 1 .36.236.239.354.574.354 1.004v3.253c0 .08-.017.138-.05.175-.034.037-.094.055-.18.055h-.885c-.08 0-.138-.018-.175-.055-.037-.037-.055-.096-.055-.175V8.176c0-.418-.188-.627-.562-.627-.332 0-.667.08-1.005.24v3.345c0 .08-.017.138-.05.175-.034.037-.094.055-.18.055h-.884c-.08 0-.139-.018-.176-.055-.036-.037-.055-.096-.055-.175V8.176c0-.418-.187-.627-.562-.627-.344 0-.682.083-1.013.249v3.336c0 .08-.017.138-.051.175-.034.037-.094.055-.18.055zM9.987 5.927c-.234 0-.42-.064-.562-.193-.142-.129-.212-.304-.212-.525 0-.221.07-.397.212-.526.141-.129.328-.193.562-.193.233 0 .42.064.562.193a.676.676 0 0 1 .212.526c0 .22-.07.396-.212.525-.141.129-.329.193-.562.193m-.443 5.437c-.08 0-.138-.019-.175-.055-.037-.037-.055-.096-.055-.176V6.886c0-.086.018-.146.055-.18.037-.034.096-.05.175-.05h.885c.086 0 .146.016.18.05s.05.094.05.18v4.247c0 .08-.017.139-.05.176-.034.036-.094.055-.18.055zm-3.681 0c-.08 0-.139-.018-.176-.055-.036-.037-.055-.096-.055-.175V6.886c0-.086.019-.146.055-.18.037-.034.096-.05.176-.05h.663c.141 0 .227.067.258.202l.12.497c.245-.27.477-.462.695-.575.219-.114.45-.17.696-.17h.13c.085 0 .147.016.183.05.037.034.056.094.056.18v.773c0 .08-.017.139-.051.176-.034.036-.094.055-.18.055a1.93 1.93 0 0 1-.166-.01 2.968 2.968 0 0 0-.258-.009c-.14 0-.313.02-.516.06-.202.04-.374.091-.515.152v3.097c0 .08-.018.138-.051.175-.034.037-.094.055-.18.055zM.344 13.262c-.08 0-.138-.017-.175-.05-.037-.034-.055-.095-.055-.18V6.886c0-.086.018-.146.055-.18.037-.034.095-.05.175-.05h.664c.14 0 .227.067.258.202l.064.24a2.03 2.03 0 0 1 .668-.424 2.13 2.13 0 0 1 .797-.157c.596 0 1.067.218 1.414.654.348.437.521 1.026.521 1.77 0 .51-.086.955-.258 1.336-.172.38-.405.674-.7.88a1.727 1.727 0 0 1-1.014.308c-.252 0-.491-.04-.719-.12a1.74 1.74 0 0 1-.58-.331v2.018c0 .085-.017.146-.05.18-.034.033-.095.05-.18.05zm2.018-2.81c.344 0 .597-.117.76-.35.163-.234.245-.603.245-1.106 0-.51-.08-.882-.24-1.115-.16-.234-.415-.35-.765-.35-.32 0-.62.083-.903.248v2.424c.27.166.571.249.903.249Z"
            }
        }
    }
}
